/* eslint-disable */

function escapeHash(t) { return t.replace(/(:|\.|\[|\]|,|=)/g, '\\$1'); } function throttle(t, e, r) {
  let n; let i; let a; let l = null; let
    o = 0; r || (r = {}); const s = function () { o = r.leading === !1 ? 0 : getTime(), l = null, a = t.apply(n, i), n = i = null; }; return function () { const c = getTime(); o || r.leading !== !1 || (o = c); const u = e - (c - o); return n = this, i = arguments, u <= 0 ? (clearTimeout(l), l = null, o = c, a = t.apply(n, i), n = i = null) : l || r.trailing === !1 || (l = setTimeout(s, u)), a; };
} $.extend($.easing, { def: 'easeOutQuad', easeOutCubic(t) { return 1 - Math.pow(1 - t, 3); } }); var getTime = Date.now || function () { return (new Date()).getTime(); }; !(function (t) {
  function e(e, r, n, i) {
    const l = t(); return t.each(a, (t, a) => {
      if (a.height() > 0) {
        const o = a.offset().top; const s = a.offset().left; const c = s + a.width(); const u = o + a.height(); const
          f = !(s > r || i > c || o > n || e > u); f && l.push(a);
      }
    }), l;
  } function r(r) {
    ++s; const n = i.scrollTop(); const a = i.scrollLeft(); const o = a + i.width(); const u = n + i.height(); const
      f = e(n + c.top + r || 200, o + c.right, u + c.bottom, a + c.left); t.each(f, (t, e) => { const r = e.data('scrollSpy:ticks'); typeof r !== 'number' && e.triggerHandler('scrollSpy:enter'), e.data('scrollSpy:ticks', s); }), t.each(l, (t, e) => { const r = e.data('scrollSpy:ticks'); typeof r === 'number' && r !== s && (e.triggerHandler('scrollSpy:exit'), e.data('scrollSpy:ticks', null)); }), l = f;
  } function n() { i.trigger('scrollSpy:winSize'); } var i = t(window); var a = []; var l = []; let o = !1; var s = 0; var
    c = {
      top: 0, right: 0, bottom: 0, left: 0,
    }; t.scrollSpy = function (e, n) {
    const l = {
      throttle: 100, scrollOffset: 200, activeClass: 'active', getActiveElement(t) { return `a[href="#${t}"]`; },
    }; n = t.extend(l, n); let s = []; e = t(e), e.each((e, r) => { a.push(t(r)), t(r).data('scrollSpy:id', e), t(`a[href="#${t(r).attr('id')}"]`).click(function (e) { e.preventDefault(); const r = t(escapeHash(this.hash)).offset().top + 1; t('html, body').animate({ scrollTop: r - n.scrollOffset }, { duration: 400, queue: !1, easing: 'easeOutCubic' }); }); }), c.top = n.offsetTop || 0, c.right = n.offsetRight || 0, c.bottom = n.offsetBottom || 0, c.left = n.offsetLeft || 0; const u = throttle(() => { r(n.scrollOffset); }, n.throttle || 100); const
      f = function () { t(document).ready(u); }; return o || (i.on('scroll', f), i.on('resize', f), o = !0), setTimeout(f, 0), e.on('scrollSpy:enter', function () { s = t.grep(s, (t) => t.height() != 0); const e = t(this); if (s[0]) { var r = t(n.getActiveElement(s[0].attr('id'))); r.removeClass(n.activeClass), r.parent().prev().removeClass(n.activeClass), e.data('scrollSpy:id') < s[0].data('scrollSpy:id') ? s.unshift(t(this)) : s.push(t(this)); } else s.push(t(this)); var r = t(n.getActiveElement(s[0].attr('id'))); r.addClass(n.activeClass), r.parent().prev().addClass(n.activeClass); }), e.on('scrollSpy:exit', function () { if (s = t.grep(s, (t) => t.height() != 0), s[0]) { var e = t(n.getActiveElement(s[0].attr('id'))); e.removeClass(n.activeClass), e.parent().prev().removeClass(n.activeClass); const r = t(this); if (s = t.grep(s, (t) => t.attr('id') != r.attr('id')), s[0]) { var e = t(n.getActiveElement(s[0].attr('id'))); e.addClass(n.activeClass), e.parent().prev().addClass(n.activeClass); } } }), e;
  }, t.winSizeSpy = function (e) { return t.winSizeSpy = function () { return i; }, e = e || { throttle: 100 }, i.on('resize', throttle(n, e.throttle || 100)); }, t.fn.scrollSpy = function (e) { return t.scrollSpy(t(this), e); };
}(jQuery));
